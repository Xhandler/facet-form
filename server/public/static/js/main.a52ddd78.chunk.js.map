{"version":3,"sources":["globalStyles.js","context/AssetLiabilityContext.jsx","elements/AssetLiabilityTable.jsx","elements/AssetLiabilityForm.jsx","elements/CodeChallengeHeader.jsx","elements/ErrorBoundary.jsx","elements/GridContainer.jsx","elements/Navigator.jsx","App.jsx","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","API","window","location","host","defaultFormData","entryName","entryAmount","entryType","AssetLiabilityContext","createContext","loading","table","content","total","AssetLiabilityContextContainer","children","useState","formData","setFormData","setLoading","entries","networth","assets","liabilities","tableContent","setTableContent","useEffect","fetch","then","res","json","Provider","value","handleFormSumbit","event","preventDefault","method","headers","body","JSON","stringify","handleFormChange","target","name","handleDeleteEntry","id","fontawesome","library","add","faTrash","AssetLiabilityTableHeader","map","i","key","AssetLiabilityTableBody","onClick","style","height","width","icon","size","AssetLiabilityTableFooter","styled","className","useContext","AssetLiabilityForm","label","onSubmit","type","onChange","min","step","checked","defaultProps","CodeChallengeHeader","company","ErrorBoundary","props","state","hasError","error","errorInfo","this","reload","React","Component","div","href","routes","App","useRoutes","GridContainer","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a52ddd78.chunk.js","sourcesContent":["import {\n    createGlobalStyle\n} from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\nhtml {\n    box-sizing: border-box;\n}\nbody {\n    margin: 0;\n}\ntd, th {\n    padding: .4rem;\n    text-align: left;\n}\ntr {\n    border-top: 1px solid #dddddd;\n    border-bottom: 1px solid #dddddd;\n}\ntable {\n    border-bottom: 2px solid #dddddd;\n    border-collapse: collapse;\n}\ntbody tr:nth-child(even) {\n  background-color: #eee;\n}\ntbody tr:nth-child(odd) {\n  background-color: #fff;\n}\ntable thead {\n  color: white;\n  background-color: #555;\n}\ninput {\n    border: 4px solid white; \n    -webkit-box-shadow: \n      inset 0 0 8px  rgba(0,0,0,0.1),\n            0 0 16px rgba(0,0,0,0.1); \n    -moz-box-shadow: \n      inset 0 0 8px  rgba(0,0,0,0.1),\n            0 0 16px rgba(0,0,0,0.1); \n    box-shadow: \n      inset 0 0 8px  rgba(0,0,0,0.1),\n            0 0 16px rgba(0,0,0,0.1); \n    background: rgba(255,255,255,0.5);\n}\n`;\n\nexport default GlobalStyle;","import React, { createContext, useState, useEffect } from \"react\";\nconst API = `http://${window.location.host}/api/financial`;\n\nexport const ASSET  = \"ASSET\";\nexport const LIABILITY = \"LIABILITY\"\n\nconst defaultFormData = {\n  entryName: \"\",\n  entryAmount: 0,\n  entryType: ASSET\n};\n\nconst AssetLiabilityContext = createContext({\n  defaultFormData,\n  loading: false,\n  table: {\n    content: [],\n    total: 0\n  }\n});\n\nexport function AssetLiabilityContextContainer({ children }) {\n  const [formData, setFormData] = useState(defaultFormData);\n  const [loading, setLoading] = useState(true);\n\n  const [tableContent, setTableContent] = useState({\n    entries: [],\n    total: {\n      networth: 0,\n      assets: 0,\n      liabilities: 0\n    }\n  });\n\n  const handleFormChange = event => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleFormSumbit = event => {\n    event.preventDefault();\n    setLoading(true);\n    fetch(`${API}/entry`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(res => {\n      setFormData(defaultFormData);\n      res.json().then(setTableContent)\n      setLoading(false);\n    });\n  };\n\n  const handleDeleteEntry = id => {\n    fetch(`${API}/entry`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ id })\n    }).then(\n      res => res.json().then(setTableContent)\n    );\n  };\n  useEffect(() => {\n    fetch(`${API}/report`).then(\n      res => {\n        res.json().then(setTableContent)\n        setLoading(false);\n      }\n    );\n  }, [])\n  return (\n    <AssetLiabilityContext.Provider\n      value={{\n        loading,\n        formData,\n        tableContent,\n        handleFormSumbit,\n        handleFormChange,\n        handleDeleteEntry\n      }}\n    >\n      {children}\n    </AssetLiabilityContext.Provider>\n  );\n}\n\nexport default AssetLiabilityContext;\n","import React, { useContext } from 'react';\nimport AssetLiabilityContext from '../context/AssetLiabilityContext';\nimport styled from 'styled-components';\nimport fontawesome from '@fortawesome/fontawesome'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nfontawesome.library.add(faTrash);\n\nconst AssetLiabilityTableHeader = ({ headers }) => (\n<thead>\n    <tr>\n        {headers.map((name, i) => <th key={`al-th-${i}`}>{name}</th>)}\n    </tr>\n</thead>\n);\nconst AssetLiabilityTableBody = ({content, handleDeleteEntry}) => (\n    <tbody>\n        {content.map(({ entryName, entryAmount, entryType, id}, i) => (\n            <tr key={`al-th-${i}`}>\n                <td>\n                    {entryName}\n                </td>\n                <td>\n                    ${entryAmount}\n                </td>\n                <td>\n                    {entryType}\n                </td>\n                <td>\n                    <button onClick={() => handleDeleteEntry(id)} style={{height:\"100%\", width:\"100%\"}}>\n                        <FontAwesomeIcon icon=\"trash\" size=\"lg\"/>\n                    </button>\n                </td>\n            </tr>\n        ))}\n    </tbody>\n)\nconst AssetLiabilityTableFooter = ({total}) => (\n    <tfoot>\n        <tr>\n            <td>Assets</td>\n            <td>${total.assets}</td>\n        </tr>\n        <tr>\n            <td>Liabilities</td>\n            <td>${total.liabilities || '0'}</td>\n        </tr>\n        <tr>\n            <td>Net</td>\n            <td>${total.networth}</td>\n        </tr>\n    </tfoot>\n)\nfunction AssetLiabilityTable({ className }) {\n    const { handleDeleteEntry, tableContent } = useContext(AssetLiabilityContext);\n\n    const { entries, total } = tableContent;\n\n    return (\n        <div className={className}>\n            <table>\n                <caption>Financial Report</caption>\n                <AssetLiabilityTableHeader headers={[\"Entry Name\", \"Amount\", \"Type\", \"Delete\"]} />\n                <AssetLiabilityTableBody content={entries}\n                handleDeleteEntry={handleDeleteEntry}/>\n                <AssetLiabilityTableFooter total={total} />\n            </table>\n        </div>\n    )\n\n}\n\nexport default styled(AssetLiabilityTable)`\ngrid-area: content;\ndisplay: flex;\n& * {\n    flex-grow: 1;\n}\n`;","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport AssetLiabilityContext, { ASSET, LIABILITY } from '../context/AssetLiabilityContext';\n\n\nfunction AssetLiabilityForm({className, label}) {\n    const {formData, handleFormChange, handleFormSumbit} = useContext(AssetLiabilityContext);\n\n    return (\n        <div className={className}>\n            <h2><u>{label}</u></h2>\n            <form  onSubmit={handleFormSumbit}>\n                <span>\n                    <label>Entry Name:</label>\n                    <input \n                        type=\"text\"\n                        name=\"entryName\"\n                        onChange={handleFormChange}\n                        value={formData.entryName}\n                    />\n                </span>\n                <span>\n                    <label>Amount:</label>\n                    <input \n                        type=\"number\"\n                        min=\"0\"\n                        step=\"0.01\"\n                        name=\"entryAmount\" \n                        value={formData.entryAmount}\n                        onChange={handleFormChange} />\n                    </span>\n                <div>\n                    <span>\n                        <label>Asset:</label>\n                        <input onChange={handleFormChange} type=\"radio\" checked={formData.entryType === ASSET} value={ASSET} name=\"entryType\"/>\n                    </span>\n                    <span>\n                        <label>Liability:</label>\n                        <input onChange={handleFormChange} type=\"radio\" checked={formData.entryType === LIABILITY} value={LIABILITY} name=\"entryType\"/> \n                    </span>\n                </div>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        </div>\n    );\n};\n\nAssetLiabilityForm.defaultProps = { label: \"Asset/Liability Form\"};\n\nexport default styled(AssetLiabilityForm)`\ntext-align: center;\nborder: 1px solid #333;\nbackground-color: lightgray;\ngrid-area: content;\nform {\n    padding: 8rem;\n    display: flex;\n    flex-direction: column;\n}\n@media only screen and (max-width: 600px){\n    form {\n        padding: 0;\n    }\n}\nform > span {\n    display: flex;\n    justify-content: space-between;\n    align-content: center;\n}\nform > div {\n    display: flex;\n    justify-content: space-evenly;\n}\nform > * {\n    padding: 1rem;\n}\n`;","import React from 'react';\nimport styled from 'styled-components';\nfunction CodeChallengeHeader({ name, company, className }) {\n    return (\n        <header className={className}>\n            <p>\n                Coding Challege for {company}\n            </p>\n            <p>\n                By <b>{name}</b>\n            </p>\n        </header>\n    );\n};\n\nCodeChallengeHeader.defaultProps = {\n    name: 'Chandler Dibble',\n    company: 'Facet Wealth'\n};\n\nexport default styled(CodeChallengeHeader)`\nborder-bottom: 1px solid #333;\nbox-shadow: rgba(0, 0, 0, 0.24) 0px 6px 20px;\ngrid-area: header;\ntext-align: center;\ndisplay:flex;\njustify-content: space-between;\npadding: .5rem 2rem .5rem 2rem;\n`;\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error) {\n      return { hasError: true };\n    }\n  \n    componentDidCatch(error, errorInfo) {\n    //   logErrorToMyService(error, errorInfo);\n    }\n  \n    render() {\n      if (this.state.hasError) {\n        return  (\n            <div>\n                <h1>Something went wrong!</h1>\n                <button onClick={ () => window.location.reload() }>Reload?</button>\n            </div>\n        );\n      }\n      return this.props.children; \n    }\n  }","import styled from 'styled-components';\n\nexport default styled.div`\ndisplay: grid;\ngrid-template-areas:\n\"header header\"\n\"nav content\";\ngrid-template-columns: 1fr 9fr;\ngrid-template-rows: auto 1fr;\ngrid-gap: 10px;\nheight: 100vh;\n@media only screen and (max-width: 600px){\n    grid-template-areas:\n    \"header\"\n    \"nav\"\n    \"content\";\n    grid-template-columns: 1fr;\n    grid-template-rows: .5fr .5fr 8fr;\n}\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { A } from 'hookrouter';\n\nfunction Navigator({className}) {\n    return (\n        <nav className={className}>\n            <A href=\"/form\">\n                Entry Form\n            </A>\n            <A href=\"/report\">\n                Financial Report\n            </A>\n        </nav>\n    )\n}\nexport default styled(Navigator)`\ngrid-area: nav;\nflex-direction: column;\nborder-right: 1px solid #222;\nbox-shadow: 5px 0 5px rgba(0, 0, 0, .24);\ndisplay: flex;\na {\n    text-align: center;\n    padding: 1rem;\n}\na:hover{\n    background-color: #555;\n    color: gold;\n}\n@media only screen and (max-width: 600px){\n    flex-direction: row;\n    margin: 0;\n    justify-content: space-evenly;\n    a {\n        flex-grow: 1;\n    }\n}\n`;","import React from 'react';\nimport GlobalStyles from './globalStyles';\nimport AssetLiabilityTable from './elements/AssetLiabilityTable';\nimport AssetLiabilityForm from './elements/AssetLiabilityForm';\nimport CodeChallengeHeader from './elements/CodeChallengeHeader';\nimport ErrorBoundary from './elements/ErrorBoundary';\nimport GridContainer from './elements/GridContainer';\nimport Navigator from './elements/Navigator';\nimport { AssetLiabilityContextContainer } from './context/AssetLiabilityContext';\nimport { useRoutes } from 'hookrouter';\n\nconst routes = {\n  '/form': () => <AssetLiabilityForm label=\"Asset/Liability Form\" />,\n  '/report': () => <AssetLiabilityTable />\n}\nfunction App() {\n  const content = useRoutes(routes);\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <GlobalStyles />\n        <GridContainer>\n          <Navigator />\n          <CodeChallengeHeader />\n          <AssetLiabilityContextContainer>\n            {content || <AssetLiabilityForm label=\"Asset/Liability Form\" />}\n          </AssetLiabilityContextContainer>\n        </GridContainer>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\n\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}